// ==========================================================
// 1. Declaraci√≥n de Variables, Constantes y Arrays
// ==========================================================

// Constantes
const NOMBRE_TIENDA = "Vintage Sound üé∂";
const IVA_PORCENTAJE = 0.21; // 21% de IVA
const SALTO_LINEA = "\n"; // Constante para saltos de l√≠nea en Alerts/Prompts

// Array de Objetos (Simulaci√≥n del cat√°logo de instrumentos)
const CATALAGO_INSTRUMENTOS = [
  { id: 1, nombre: "Guitarra El√©ctrica Fender Squier Strat", precio: 350 },
  { id: 2, nombre: "Bajo El√©ctrico Ibanez SR300", precio: 480 },
  { id: 3, nombre: "Bater√≠a Ac√∫stica Pearl Roadshow", precio: 720 },
  { id: 4, nombre: "Guitarra Cl√°sica Yamaha C40", precio: 150 },
  { id: 5, nombre: "Pedal Distorsi√≥n Boss DS-1", precio: 85 },
];

// Variables
let carrito = []; // Array para almacenar los IDs de los productos seleccionados
let subtotalCompra = 0;
let nombreUsuario = "";

// ==========================================================
// 2. Funciones (Entrada, Procesamiento y Salida)
// ==========================================================

/**
 * FUNCI√ìN 1: Entrada de datos (Solicitar nombre y saludar)
 */
function solicitarNombre() {
  console.log("--- INICIO DE SIMULACI√ìN ---");
  // Uso de Prompt para entrada de datos
  nombreUsuario = prompt(
    `¬°Bienvenido a ${NOMBRE_TIENDA}!\nLa tienda de instrumentos usados con el mejor sonido.\n\nPor favor, ingresa tu nombre para comenzar:`
  );

  if (nombreUsuario && nombreUsuario.trim() !== "") {
    nombreUsuario = nombreUsuario.trim();
    // Uso de Alert y concatenaci√≥n
    alert(
      `¬°Hola, ${nombreUsuario}!\nEst√°s a punto de simular una compra.\nRecuerda revisar la Consola (F12) para ver el cat√°logo.`
    );
    console.log(`Usuario: ${nombreUsuario} ha iniciado la simulaci√≥n.`);
  } else {
    nombreUsuario = "Invitado";
    alert(
      `¬°Hola, ${nombreUsuario}!\nEst√°s a punto de simular una compra.\nRecuerda revisar la Consola (F12) para ver el cat√°logo.`
    );
    console.log(
      `Usuario: ${nombreUsuario} (An√≥nimo) ha iniciado la simulaci√≥n.`
    );
  }
}

/**
 * FUNCI√ìN 2: Procesamiento de datos (Mostrar cat√°logo y agregar al carrito)
 * Utiliza ciclos de iteraci√≥n y condicionales.
 */
function simularCompra() {
  let seguirComprando = true;

  // Condicional inicial para verificar que el cat√°logo no est√© vac√≠o
  if (CATALAGO_INSTRUMENTOS.length === 0) {
    alert("Lo sentimos, no hay instrumentos disponibles en este momento.");
    console.warn("Cat√°logo vac√≠o. Fin de la simulaci√≥n.");
    return;
  }

  // Muestra el cat√°logo en la consola
  console.log("==========================================");
  console.log(`Cat√°logo de Instrumentos Usados de ${NOMBRE_TIENDA}`);
  console.log("==========================================");

  // Ciclo de iteraci√≥n (for...of) para mostrar productos en consola
  for (const producto of CATALAGO_INSTRUMENTOS) {
    console.log(
      `ID: ${producto.id} | Nombre: ${producto.nombre} | Precio: $${producto.precio}`
    );
  }
  console.log("==========================================");

  // Ciclo de iteraci√≥n (while) para la interacci√≥n de compra
  while (seguirComprando) {
    let mensajePrompt = `CAT√ÅLOGO DISPONIBLE (Ingresa el ID del producto):\n${SALTO_LINEA}`;

    // Construcci√≥n din√°mica del mensaje del Prompt
    for (const producto of CATALAGO_INSTRUMENTOS) {
      mensajePrompt += `[ID ${producto.id}] ${producto.nombre} - $${producto.precio}${SALTO_LINEA}`;
    }
    mensajePrompt += `${SALTO_LINEA}Ingresa 'FIN' para terminar la compra.`;

    let inputUsuario = prompt(mensajePrompt);

    // Condicional para verificar si el usuario quiere terminar
    if (inputUsuario === null || inputUsuario.toUpperCase() === "FIN") {
      seguirComprando = false;
      break;
    }

    // Conversi√≥n a n√∫mero
    let idSeleccionado = parseInt(inputUsuario);

    // Condicional para validar la entrada (n√∫mero v√°lido y existente)
    const productoEncontrado = CATALAGO_INSTRUMENTOS.find(
      (p) => p.id === idSeleccionado
    );

    if (productoEncontrado) {
      carrito.push(idSeleccionado); // Almacena el ID
      subtotalCompra += productoEncontrado.precio; // Suma al subtotal

      // Uso de Alert con concatenaci√≥n
      alert(
        `‚úÖ ¬°Producto agregado! ${productoEncontrado.nombre} ($${productoEncontrado.precio}).${SALTO_LINEA}Subtotal actual: $${subtotalCompra}`
      );
      console.log(
        `Agregado al carrito: ID ${idSeleccionado} (${productoEncontrado.nombre}).`
      );
    } else {
      // Condicional para ID inv√°lido
      alert(
        "‚ùå ID de producto no v√°lido. Por favor, ingresa un n√∫mero de ID de la lista o 'FIN'."
      );
      console.warn(`Intento de ID inv√°lido: ${inputUsuario}`);
    }
  }
}

/**
 * FUNCI√ìN 3: Salida de datos (Mostrar resumen y calcular total)
 * Calcula y muestra el resumen final, usa condicional y Confirm.
 */
function mostrarResumen() {
  console.log("--- RESUMEN DE LA COMPRA ---");

  // Condicional para verificar si se agreg√≥ algo al carrito
  if (carrito.length === 0) {
    // Uso de Alert
    alert(`Gracias por tu visita, ${nombreUsuario}. ¬°Esperamos verte pronto!`);
    console.log("Carrito vac√≠o. Simulaci√≥n terminada.");
    return;
  }

  // C√°lculo del Total con IVA
  const ivaMonto = subtotalCompra * IVA_PORCENTAJE;
  const totalFinal = subtotalCompra + ivaMonto;

  // Uso de Confirm
  const confirmaFin = confirm(
    `üëã ${nombreUsuario}, ¬ødeseas finalizar tu compra de ${carrito.length} art√≠culos?`
  );

  if (confirmaFin) {
    // Formato para el resumen final (uso de Alert, concatenaci√≥n y saltos de l√≠nea)
    let resumen = `üéâ ¬°Gracias por tu compra en ${NOMBRE_TIENDA}, ${nombreUsuario}! üéâ${SALTO_LINEA}${SALTO_LINEA}`;
    resumen += `üìù Detalle de tu Pedido: ${carrito.length} art√≠culos.${SALTO_LINEA}`;
    resumen += `--------------------------------------${SALTO_LINEA}`;
    resumen += `SUBTOTAL: $${subtotalCompra.toFixed(2)}${SALTO_LINEA}`;
    resumen += `IVA (${IVA_PORCENTAJE * 100}%): $${ivaMonto.toFixed(
      2
    )}${SALTO_LINEA}`;
    resumen += `--------------------------------------${SALTO_LINEA}`;
    resumen += `TOTAL FINAL: $${totalFinal.toFixed(
      2
    )}${SALTO_LINEA}${SALTO_LINEA}`;
    resumen += `*Simulaci√≥n de pago realizada con √©xito.*`;

    alert(resumen);
    console.log(`Compra finalizada. Total: $${totalFinal.toFixed(2)}`);
  } else {
    alert("Compra cancelada. ¬°Vuelve pronto!");
    console.log("Compra cancelada por el usuario.");
  }

  console.log("--- FIN DE SIMULACI√ìN ---");
}

// ==========================================================
// 4. Invocaci√≥n de las Funciones (Llamadas al algoritmo)
// ==========================================================

solicitarNombre(); // 1. Entrada de datos
simularCompra(); // 2. Procesamiento de datos
mostrarResumen(); // 3. Salida de datos
